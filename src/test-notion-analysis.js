// Test Notion Analysis Tool with real API
import { NotionAnalysisTool } from "./tools/NotionAnalysisTool.js";
import { AIOrchestrationTool } from "./tools/AIOrchestrationTool.js";

// Mock App for testing
const mockApp = {
  vault: {
    read: async () => "test content",
    write: async () => {},
  },
};

/**
 * üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á Notion Analysis Tool
 */
async function testNotionAnalysis() {
  console.log("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö Notion Analysis Tool ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á...");

  try {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á AI Orchestration Tool
    const aiOrchestration = new AIOrchestrationTool(mockApp);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Notion Analysis Tool
    const notionAnalysis = new NotionAnalysisTool(mockApp, aiOrchestration);

    console.log("‚úÖ Tools ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ databases ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    console.log("\nüìã ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Notion databases ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î");
    const databasesResult = await notionAnalysis.execute({
      action: "fetchAllDatabases",
    });

    if (databasesResult.success) {
      console.log("‚úÖ ‡∏î‡∏∂‡∏á databases ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      console.log(`üìä ‡∏û‡∏ö ${databasesResult.data.totalCount} databases`);

      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î databases
      databasesResult.data.databases.forEach((db, index) => {
        console.log(`  ${index + 1}. ${db.title} (${db.id})`);
        console.log(`     Properties: ${db.properties.join(", ")}`);
        console.log(`     URL: ${db.url}`);
      });
    } else {
      console.log("‚ùå ‡∏î‡∏∂‡∏á databases ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", databasesResult.error);
      return;
    }

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2: ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏î‡πâ‡∏ß‡∏¢ Azure OpenAI
    console.log("\nü§ñ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2: ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏î‡πâ‡∏ß‡∏¢ Azure OpenAI");
    const comprehensiveResult = await notionAnalysis.execute({
      action: "comprehensiveAnalysis",
      aiProvider: "azure-openai",
    });

    if (comprehensiveResult.success) {
      console.log("‚úÖ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      console.log(
        `üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ${comprehensiveResult.data.databasesAnalyzed} databases`
      );
      console.log(`üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ:`, comprehensiveResult.data.summary);
    } else {
      console.log(
        "‚ùå ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:",
        comprehensiveResult.error
      );
    }

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 3: ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ Ollama (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    console.log("\nü§ñ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 3: ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ Ollama");
    const ollamaResult = await notionAnalysis.execute({
      action: "comprehensiveAnalysis",
      aiProvider: "ollama",
    });

    if (ollamaResult.success) {
      console.log("‚úÖ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ Ollama ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      console.log(
        `üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ${ollamaResult.data.databasesAnalyzed} databases`
      );
    } else {
      console.log("‚ùå ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ Ollama ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", ollamaResult.error);
    }

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 4: ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå database ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ database)
    if (databasesResult.success && databasesResult.data.totalCount > 0) {
      const firstDb = databasesResult.data.databases[0];
      console.log(
        `\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö 4: ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå database "${firstDb.title}" ‡∏î‡πâ‡∏ß‡∏¢ Azure OpenAI`
      );

      const specificAnalysis = await notionAnalysis.execute({
        action: "analyzeWithAI",
        databaseId: firstDb.id,
        analysisType: "structure",
        aiProvider: "azure-openai",
        prompt: `‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á database "${firstDb.title}" ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á`,
      });

      if (specificAnalysis.success) {
        console.log("‚úÖ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå database ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        console.log(
          `üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ${specificAnalysis.data.pagesAnalyzed} pages`
        );
        console.log(`ü§ñ AI Response:`, specificAnalysis.data.aiResponse);
      } else {
        console.log(
          "‚ùå ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå database ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:",
          specificAnalysis.error
        );
      }
    }

    console.log("\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Notion Analysis Tool ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:", error);
  }
}

/**
 * üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Notion API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
 */
async function testNotionConnection() {
  console.log("üîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Notion API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á...");

  try {
    const response = await fetch("https://api.notion.com/v1/search", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${process.env.NOTION_API_KEY || ""}`,
        "Notion-Version": "2022-06-28",
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        filter: {
          property: "object",
          value: "database",
        },
      }),
    });

    if (response.ok) {
      const data = await response.json();
      console.log("‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Notion API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      console.log(`üìä ‡∏û‡∏ö ${data.results.length} databases`);

      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î databases
      data.results.forEach((db, index) => {
        console.log(
          `  ${index + 1}. ${db.title[0]?.plain_text || "Untitled"} (${db.id})`
        );
        console.log(
          `     Properties: ${Object.keys(db.properties).join(", ")}`
        );
        console.log(`     URL: ${db.url}`);
      });

      return data.results;
    } else {
      console.log(
        "‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Notion API ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:",
        response.status,
        response.statusText
      );
      const errorText = await response.text();
      console.log("Error details:", errorText);
      return null;
    }
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠:", error);
    return null;
  }
}

/**
 * üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI Providers
 */
async function testAIProviders() {
  console.log("ü§ñ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI Providers...");

  try {
    const aiOrchestration = new AIOrchestrationTool(mockApp);

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Azure OpenAI
    console.log("üîµ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Azure OpenAI...");
    const azureResult = await aiOrchestration.execute({
      prompt: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Azure OpenAI ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
      provider: "azure-openai",
    });

    if (azureResult.success) {
      console.log("‚úÖ Azure OpenAI ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ");
      console.log("üìù Response:", azureResult.data.content);
    } else {
      console.log("‚ùå Azure OpenAI ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:", azureResult.error);
    }

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Ollama
    console.log("üü¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Ollama...");
    const ollamaResult = await aiOrchestration.execute({
      prompt: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Ollama ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
      provider: "ollama",
    });

    if (ollamaResult.success) {
      console.log("‚úÖ Ollama ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ");
      console.log("üìù Response:", ollamaResult.data.content);
    } else {
      console.log("‚ùå Ollama ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:", ollamaResult.error);
    }
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI:", error);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
async function runAllTests() {
  console.log("üß™ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...\n");

  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Notion API
  await testNotionConnection();

  console.log("\n" + "=".repeat(50) + "\n");

  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AI Providers
  await testAIProviders();

  console.log("\n" + "=".repeat(50) + "\n");

  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Notion Analysis Tool
  await testNotionAnalysis();
}

// Export functions
export {
  testNotionAnalysis,
  testNotionConnection,
  testAIProviders,
  runAllTests,
};

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (import.meta.url === `file://${process.argv[1]}`) {
  runAllTests().catch(console.error);
}
